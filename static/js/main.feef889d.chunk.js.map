{"version":3,"sources":["assets/video/Earth.mp4","components/Nav.js","components/Head.js","components/Stream.js","components/MapContainer.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stream","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","React","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","target","Component","Head","autoPlay","muted","loop","src","earth","title","width","height","scrolling","allowFullScreen","webkitallowfullscreen","frameBorder","style","MapContainer","_React$Component","_this","_len","length","args","Array","_key","call","concat","onMarkerClick","onInfoWindowClose","Map","google","window","zoom","initialCenter","lat","this","props","lng","long","Marker","onClick","name","InfoWindow","onClose","GoogleApiWrapper","apiKey","process","Main","state","roster","population","rosterFill","bind","_assertThisInitialized","_this2","fetch","then","position","json","data","setState","latitude","longitude","catch","error","console","log","people","number","_this3","iss_position","forEach","person","role","data-dismiss","map","item","App","Nav","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.feef889d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Earth.5443e3f1.mp4\";","import React, {Component} from 'react'\r\n\r\nexport default class Stream extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark navbar-custom fixed-top\">\r\n                <div className=\"container\">\r\n                  <a className=\"navbar-brand\" href=\"/#\">ISS Intercept</a>\r\n                  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"           data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\"        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                  </button>\r\n                  <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                      <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"https://github.com/piercecollazo/space-page\" target={'_blank'}>Github</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport earth from '../assets/video/Earth.mp4'\r\n\r\nexport default class Head extends Component {\r\n    render(){\r\n        return (\r\n            <header className=\"masthead text-center text-white\">\r\n            <div className=\"masthead-content\">\r\n              <div className=\"container\">\r\n                <h1 className=\"masthead-heading mb-0 display-4\">ISS Intercept</h1>\r\n                <h2 className=\"masthead-subheading mb-0 lead\">Providing up to date information on the International Space Station</h2>\r\n              </div>\r\n            </div>\r\n            <video autoPlay muted loop id=\"background-video\">    \r\n                    <source src={earth}type=\"video/mp4\"></source>\r\n            </video>\r\n          </header>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class Stream extends Component {\r\n    render(){\r\n        return (\r\n            <iframe id='stream' title='stream' width=\"480\" height=\"270\" src=\"https://ustream.tv/embed/9408562\" scrolling=\"no\" allowFullScreen webkitallowfullscreen='true' frameBorder=\"0\"></iframe>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n \r\nconst style = {\r\n    width: '100%',\r\n    height: '400px'\r\n  }\r\n  \r\n// Still unsure why this isn't live updating properly. Perhaps an issue with the state no longer being passed along after the initial mounting in Main.js?\r\nexport class MapContainer extends React.Component {\r\n\r\n\r\n    onMarkerClick = () => {\r\n\r\n    }\r\n\r\n    onInfoWindowClose = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Map \r\n                google={window.google} \r\n                zoom={5}\r\n                style={style}\r\n                initialCenter={{lat:this.props.lat, lng:this.props.long}}\r\n                >\r\n \r\n            <Marker onClick={this.onMarkerClick}\r\n                    name={'Current location'} />\r\n     \r\n            <InfoWindow onClose={this.onInfoWindowClose}>\r\n                <div>\r\n                  <h1>{`Hi hello`}</h1>\r\n                </div>\r\n            </InfoWindow>\r\n          </Map>\r\n        )\r\n    }\r\n\r\n}\r\n \r\nexport default GoogleApiWrapper({\r\n    apiKey: process.env.REACT_APP_GOOGLE_KEY\r\n})(MapContainer);\r\n   \r\n\r\n","import React, {Component} from 'react'\r\nimport Stream from './Stream'\r\nimport MapContainer from './MapContainer';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            roster: [{name: 'default'}],\r\n            lat: 40.758498,\r\n            long: -73.988836,\r\n            population: 0\r\n        }\r\n        this.rosterFill = this.rosterFill.bind(this)\r\n    }\r\n\r\n    componentWillMount(){\r\n        fetch('https://api.wheretheiss.at/v1/satellites/25544')\r\n            .then(position => {\r\n                return position.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    lat: data.latitude,\r\n                    long:data.longitude\r\n                })\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n\r\n        fetch('https://corquaid.github.io/international-space-station-APIs/JSON/people-in-space.json')\r\n            .then(roster => {\r\n                return roster.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    roster: data.people,\r\n                    population: data.number\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('http://api.open-notify.org/iss-now.json')\r\n            .then(position => {\r\n                return position.json()\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    lat: data.iss_position.latitude,\r\n                    long:data.iss_position.longitude\r\n                })\r\n            })\r\n            .catch(error =>{\r\n                console.log(error)\r\n            })\r\n    }\r\n    \r\n\r\n    rosterFill(){\r\n       return this.state.roster.forEach(person =>{\r\n           return (<li>{person.name}</li>)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n        <div id='Main-view'>\r\n        <section>\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-lg-6 order-lg-2\">\r\n              <div className=\"p-5\">\r\n                <Stream />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 order-lg-1\">\r\n              <div className=\"p-5\">\r\n                <h2 className=\"display-4\">The ISS livestream</h2>\r\n                <p>Observe the crew hard at work, or enjoy the breathtaking live view of Earth from orbit, perhaps even getting lucky enough to watch a space walk!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    \r\n      <section>\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"map p-5\">\r\n                <MapContainer \r\n                 lat={this.state.lat}\r\n                 long={this.state.long}\r\n                />\r\n                \r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"p-5\">\r\n                <h2 className=\"display-4\">Is the ISS near?</h2>\r\n                <p>With Google maps, we can even be kept up to date on the location of the ISS over the planet!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    \r\n      <section>\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-lg-6 order-lg-2\">\r\n              <div className=\"p-5\">\r\n                <h1>{this.state.population} Astronauts onboard</h1>\r\n                <button className=\"btn btn-primary btn-xl rounded-pill mt-5\" data-toggle=\"modal\" data-target=\"#roster\">View Roster</button>\r\n\r\n                <div id=\"roster\" className=\"modal fade\" role=\"dialog\">\r\n                  <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\">ISS Crew Roster</h4>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                        <ul>\r\n                        {this.state.roster.map(item => {\r\n                            return <li key={item.name}>{item.name}</li>\r\n                        })}\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-default\"    data-dismiss=\"modal\">Close</button>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 order-lg-1\">\r\n              <div className=\"p-5\">\r\n                <h2 className=\"display-4\">Who's out there?</h2>\r\n                <p>You can even see how many are currently stationed at the ISS, as well as view a roster of the current inhabitants</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav'\r\nimport Head from './components/Head'\r\nimport Main from './components/Main'\r\n\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <Head />\r\n        <Main />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}